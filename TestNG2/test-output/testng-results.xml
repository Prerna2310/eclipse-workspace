<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="7" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-23T20:27:31 IST" name="Suite" finished-at="2022-03-23T20:27:31 IST" duration-ms="48">
    <groups>
      <group name="Smoke">
        <method signature="Demo.test1()[pri:0, instance:New.Demo@2e4b8173]" name="test1" class="New.Demo"/>
        <method signature="Lec134.sample2()[pri:0, instance:New.Lec134@4b0b0854]" name="sample2" class="New.Lec134"/>
        <method signature="test.APIloginCarLoan()[pri:0, instance:New.test@20deea7f]" name="APIloginCarLoan" class="New.test"/>
        <method signature="test.MobileloginCarLoan()[pri:0, instance:New.test@20deea7f]" name="MobileloginCarLoan" class="New.test"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2022-03-23T20:27:31 IST" name="Car Loan" finished-at="2022-03-23T20:27:31 IST" duration-ms="48">
      <class name="New.test">
        <test-method is-config="true" signature="test2()[pri:0, instance:New.test@20deea7f]" started-at="2022-03-23T20:27:31 IST" name="test2" finished-at="2022-03-23T20:27:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="Beforeevery()[pri:0, instance:New.test@20deea7f]" started-at="2022-03-23T20:27:31 IST" name="Beforeevery" finished-at="2022-03-23T20:27:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeevery -->
        <test-method signature="APIloginCarLoan()[pri:0, instance:New.test@20deea7f]" started-at="2022-03-23T20:27:31 IST" name="APIloginCarLoan" finished-at="2022-03-23T20:27:31 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APIloginCarLoan -->
        <test-method is-config="true" signature="Aftermethod()[pri:0, instance:New.test@20deea7f]" started-at="2022-03-23T20:27:31 IST" name="Aftermethod" finished-at="2022-03-23T20:27:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftermethod -->
        <test-method signature="MobileloginCarLoan()[pri:0, instance:New.test@20deea7f]" started-at="2022-03-23T20:27:31 IST" name="MobileloginCarLoan" finished-at="2022-03-23T20:27:31 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginCarLoan -->
        <test-method is-config="true" signature="Beforeevery()[pri:0, instance:New.test@20deea7f]" started-at="2022-03-23T20:27:31 IST" name="Beforeevery" finished-at="2022-03-23T20:27:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeevery -->
        <test-method is-config="true" signature="Aftermethod()[pri:0, instance:New.test@20deea7f]" started-at="2022-03-23T20:27:31 IST" name="Aftermethod" finished-at="2022-03-23T20:27:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftermethod -->
        <test-method signature="MobilesigninCarLoan()[pri:0, instance:New.test@20deea7f]" started-at="2022-03-23T20:27:31 IST" name="MobilesigninCarLoan" finished-at="2022-03-23T20:27:31 IST" depends-on-methods="New.test.APIloginCarLoan" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesigninCarLoan -->
        <test-method is-config="true" signature="Beforeevery()[pri:0, instance:New.test@20deea7f]" started-at="2022-03-23T20:27:31 IST" name="Beforeevery" finished-at="2022-03-23T20:27:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeevery -->
        <test-method is-config="true" signature="Aftermethod()[pri:0, instance:New.test@20deea7f]" started-at="2022-03-23T20:27:31 IST" name="Aftermethod" finished-at="2022-03-23T20:27:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftermethod -->
      </class> <!-- New.test -->
      <class name="New.Demo">
        <test-method is-config="true" signature="AfSuite(java.lang.String)[pri:0, instance:New.Demo@2e4b8173]" started-at="2022-03-23T20:27:31 IST" name="AfSuite" finished-at="2022-03-23T20:27:31 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://rahulshettyacademy.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfSuite -->
      </class> <!-- New.Demo -->
      <class name="New.Lec134">
        <test-method is-config="true" signature="BfSuite()[pri:0, instance:New.Lec134@4b0b0854]" started-at="2022-03-23T20:27:31 IST" name="BfSuite" finished-at="2022-03-23T20:27:31 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfSuite -->
      </class> <!-- New.Lec134 -->
    </test> <!-- Car Loan -->
    <test started-at="2022-03-23T20:27:31 IST" name="Personal Loan" finished-at="2022-03-23T20:27:31 IST" duration-ms="46">
      <class name="New.Demo">
        <test-method signature="test1()[pri:0, instance:New.Demo@2e4b8173]" started-at="2022-03-23T20:27:31 IST" name="test1" finished-at="2022-03-23T20:27:31 IST" duration-ms="7" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at New.Demo.test1(Demo.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- New.Demo -->
      <class name="New.Lec134">
        <test-method is-config="true" signature="BFClass()[pri:0, instance:New.Lec134@4b0b0854]" started-at="2022-03-23T20:27:31 IST" name="BFClass" finished-at="2022-03-23T20:27:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BFClass -->
        <test-method signature="sample1()[pri:0, instance:New.Lec134@4b0b0854]" started-at="2022-03-23T20:27:31 IST" name="sample1" finished-at="2022-03-23T20:27:31 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sample1 -->
        <test-method signature="sample2()[pri:0, instance:New.Lec134@4b0b0854]" started-at="2022-03-23T20:27:31 IST" name="sample2" finished-at="2022-03-23T20:27:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sample2 -->
        <test-method is-config="true" signature="AFClass()[pri:0, instance:New.Lec134@4b0b0854]" started-at="2022-03-23T20:27:31 IST" name="AFClass" finished-at="2022-03-23T20:27:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AFClass -->
        <test-method is-config="true" signature="sample()[pri:0, instance:New.Lec134@4b0b0854]" started-at="2022-03-23T20:27:31 IST" name="sample" finished-at="2022-03-23T20:27:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sample -->
      </class> <!-- New.Lec134 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Suite -->
</testng-results>
